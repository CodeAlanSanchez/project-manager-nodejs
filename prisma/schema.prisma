// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  username  String?
  email     String   @unique
  password  String
  members   Member[]
  received  Invite[] @relation("received")
}

model Member {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  bugs      Bug[]
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  isOwner   Boolean
  sent      Invite[] @relation("sent")
}

model Bug {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  name        String
  description String?
  status      String
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   Int
  creator     Member   @relation(fields: [creatorId], references: [id])
  creatorId   Int
}

model Project {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  name        String
  description String
  status      Int      @default(1)
  members     Member[]
  bugs        Bug[]
  invites     Invite[]
}

model Invite {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  receiver   User     @relation("received", fields: [receiverId], references: [id])
  receiverId Int
  sender     Member   @relation("sent", fields: [senderId], references: [id])
  senderId   Int
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  Int
}
